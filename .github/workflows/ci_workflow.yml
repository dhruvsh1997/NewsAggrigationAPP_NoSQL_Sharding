name: Django News Aggregator NoSQL Sharding CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: NwzAPI   # 👈 This links the job to your environment with secrets
    # strategy:   # 👈 This create build according to multiple python versions
      # max-parallel: 4
      # matrix:
        # python-version: [3.8, 3.9]

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }} #👈 If you want to use various version you want to use

    # - name: 🐍 Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: 3.10   # 👈 Change this to the specific version you want to use     
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: ✅ Run Django Check
      run: |
        python manage.py test

      - name: Set up Docker Compose
        run: |
          docker compose --version || sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up environment variables
        run: echo "NEWS_API_KEY=${{ secrets.NEWS_API_KEY }}" >> .env

      - name: Build and run containers
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Wait for services to be healthy
        run: sleep 15

      - name: Run tests
        run: docker-compose exec -T web python manage.py test
